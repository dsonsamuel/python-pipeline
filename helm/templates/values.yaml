# Default values for cp-python-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: ns-aced9b

global:
  appID: "al11293"
  workstream: "gemcore"
  namespace: "ns-aced9b"  # default namespace

replicaCount: 1

appName: cp-python-app

istio: ingressgateway-ilb

maxRatePerEndpoint: 1000

image:
  repository: https://artefacts.lloydsbanking.cloud/#browse/browse:private-harprd_brgtst-python-staging:PyTest%2F1.0
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.3"

imagePullSecrets: []
nameOverride: "cp-python-app"
fullnameOverride: "cp-python-app"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

env:
  PROJECT: "wrk-dev-wrk01-svp-3f2f1d"
  LOCATION: "europe-west2"

podAnnotations: {}
podLabels: {}

# podSecurityContext: {}
podSecurityContext:
  fsGroup: 1
  runAsNonRoot: true
  runAsUser: 10002
  seccompProfile:
    type: RuntimeDefault
  supplementalGroups:
  - 1337

# securityContext:
#   capabilities:
#     drop:
#     - ALL
  # readOnlyRootFilesystem: false
  # runAsNonRoot: false
  # runAsUser: 0
  # allowPrivilegeEscalation: true

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10002
  runAsGroup: 10002
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 8080
container:
  port: 8080
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 400m
    memory: 500Mi
  requests:
    cpu: 400m
    memory: 500Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
virtualservice:
  gateways: istio-gateway/caas-web-api-ingressgateway
  hosts:
    - api.caas01.dev.c2.lloydsbanking.cloud
  cwahosts: {}
  webgateways: {}
  webpath: dev

# Configuration file names
configFiles:
  apigee: "config.json"
  istio: "config_istio.json"
  models: "config_models.json"

# ConfigMap names (must match what config_manager.py expects)
configMapNames:
  apigee: "cp-config-apigee"
  istio: "cp-config-istio"
  models: "cp-config-models"
